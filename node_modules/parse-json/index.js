'use strict';
<<<<<<< HEAD
var errorEx = require('error-ex');
var fallback = require('./vendor/parse');

var JSONError = errorEx('JSONError', {
	fileName: errorEx.append('in %s')
});

module.exports = function (x, reviver, filename) {
=======
const errorEx = require('error-ex');
const fallback = require('json-parse-better-errors');

const JSONError = errorEx('JSONError', {
	fileName: errorEx.append('in %s')
});

module.exports = (input, reviver, filename) => {
>>>>>>> 7fb3c6ff89f5898fec127c6371f182503ef95edb
	if (typeof reviver === 'string') {
		filename = reviver;
		reviver = null;
	}

	try {
		try {
<<<<<<< HEAD
			return JSON.parse(x, reviver);
		} catch (err) {
			fallback.parse(x, {
				mode: 'json',
				reviver: reviver
			});
=======
			return JSON.parse(input, reviver);
		} catch (err) {
			fallback(input, reviver);
>>>>>>> 7fb3c6ff89f5898fec127c6371f182503ef95edb

			throw err;
		}
	} catch (err) {
<<<<<<< HEAD
		var jsonErr = new JSONError(err);

=======
		err.message = err.message.replace(/\n/g, '');

		const jsonErr = new JSONError(err);
>>>>>>> 7fb3c6ff89f5898fec127c6371f182503ef95edb
		if (filename) {
			jsonErr.fileName = filename;
		}

		throw jsonErr;
	}
};
